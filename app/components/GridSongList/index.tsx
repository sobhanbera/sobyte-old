import React from 'react'
import {FlatList, StyleSheet} from 'react-native'

import {SongObject} from '../../interfaces'
import {usePlayer, useSetting} from '../../context'
import {
    IMAGE_SIZE_TO_SHOW,
    IMAGE_MARGIN_TO_SHOW,
    IMAGE_PADDING_TO_SHOW,
} from '../../constants'
import GridSongList_SelfShimmer from './SelfShimmer'
import GridSongItem from './GridSongItem'
import {Track} from '../../api/PlayerControls'

interface Props {
    content: Array<SongObject>
    contentLength: number | 0
    scrollDirection?: 'horizontal' | 'vertical'
    textColor: string
    subColor: string
    shimmerDirection: 'up' | 'down' | 'left' | 'right'
    id: string
}
const GridSongList = (props: Props) => {
    const {imageQuality} = useSetting()
    const {subColor, textColor, content, id, shimmerDirection} = props
    const player = usePlayer()

    const playSong = (song: Track) => {
        console.log('ASD')
        player.play({
            id: song.id,
            url: '', // url is generated by play function itself now so no need to provide this in new code...
            duration: song.duration,
            title: song.title,
            artist: song.artist,
            artwork: song.artwork,
        })
    }

    return content[0].musicId.length <= 0 ? (
        <GridSongList_SelfShimmer shimmerDirection={shimmerDirection} />
    ) : (
        <FlatList
            key={id}
            showsHorizontalScrollIndicator={false}
            showsVerticalScrollIndicator={false}
            horizontal
            snapToInterval={
                IMAGE_SIZE_TO_SHOW +
                IMAGE_MARGIN_TO_SHOW +
                IMAGE_PADDING_TO_SHOW +
                IMAGE_PADDING_TO_SHOW * 2
            }
            data={content}
            keyExtractor={(item, _) => item.musicId}
            renderItem={({item, index}) => {
                return (
                    <GridSongItem
                        id={id}
                        item={item}
                        index={index}
                        imageQuality={imageQuality}
                        onPress={playSong}
                        subColor={subColor}
                        textColor={textColor}
                    />
                )
            }}
        />
    )
}

export const styles = StyleSheet.create({
    contentWrapper: {
        // backgroundColor: '#0000007f',
        paddingTop: 10,
        borderRadius: 6,

        paddingHorizontal: IMAGE_PADDING_TO_SHOW,
        marginHorizontal: IMAGE_MARGIN_TO_SHOW,
    },
    firstContent: {
        paddingLeft: IMAGE_PADDING_TO_SHOW * 2,
        marginLeft: IMAGE_MARGIN_TO_SHOW * 2,
    },
    lastContent: {
        paddingRight: IMAGE_PADDING_TO_SHOW * 2,
        marginRight: IMAGE_MARGIN_TO_SHOW * 2,
    },
    contentImage: {
        borderRadius: 6,
        maxWidth: IMAGE_SIZE_TO_SHOW,
        maxHeight: IMAGE_SIZE_TO_SHOW,
        width: IMAGE_SIZE_TO_SHOW,
        height: IMAGE_SIZE_TO_SHOW,
    },
    songTitle: {
        width: IMAGE_SIZE_TO_SHOW,
        fontSize: 16,
        paddingTop: 5,
        paddingBottom: 2,
    },
    artist: {
        width: IMAGE_SIZE_TO_SHOW,
        fontSize: 14,
        paddingTop: 3,
        paddingBottom: 2,
    },

    dummyBackground: {
        backgroundColor: '#00000025',
        borderRadius: 6,
    },
    dummyText: {
        width: IMAGE_SIZE_TO_SHOW,
        height: 10,
        borderRadius: 2,
        marginVertical: 5,
        overflow: 'hidden',
    },
})

export default React.memo(GridSongList)
